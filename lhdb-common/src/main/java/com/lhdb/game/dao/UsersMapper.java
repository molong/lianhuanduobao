package com.lhdb.game.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.lhdb.game.entity.Module;
import com.lhdb.game.entity.ModulePermission;
import com.lhdb.game.entity.Users;
import com.lhdb.game.entity.UsersExample;

public interface UsersMapper {
	
	/**
	 * 根据操作URI返回操作权限的值
	 * @param uri
	 * @return
	 */
	ModulePermission getPermissionValue(String uri);

	/**
	 * 获得用户每个模块的权限
	 * @param userid
	 * @return
	 */
	List<ModulePermission> getUserPermission(Integer userid);
	
	/**
	 * 获得用户拥有权限访问功能模块，返回作为菜单显示
	 * @param userid
	 * @return
	 */
	List<Module> getUserMenu(Integer userid);
	
	
	/**
	 * 更新角色
	 * @param record
	 * @return
	 */
	int updateUserRole(@Param("record") Users record);
	/**
	 * 更新信息
	 * @param record
	 * @return
	 */
	int updateUserInfo(@Param("record") Users record);
	/**
	 * 删除一组管理员
	 * @param userids
	 * @return
	 */
	int deleteByIDList(@Param("ids")int[] idArray);
	
	/**
	 * 删除角色表中管理员
	 * @param userids
	 * @return
	 */
	int deleteUsersInRole(@Param("ids")int[] idArray);
	
	
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int countByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int deleteByExample(UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int deleteByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int insert(Users record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int insertSelective(Users record);

    /**
     * 插入用户角色关联
     * @param record
     * @return
     */
    int insertUserRole(Users record);
    
    List<Users> selectAll();
    
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    List<Users> selectByExample(UsersExample example);
    List<Users> selectByExample2(UsersExample example);
    
    List<Users> selectWithSpreader(Users users);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    Users selectByPrimaryKey(Integer userid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int updateByExampleSelective(@Param("record") Users record, @Param("example") UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int updateByExample(@Param("record") Users record, @Param("example") UsersExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int updateByPrimaryKeySelective(Users record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Users
     *
     * @mbggenerated Wed Oct 29 18:20:08 CST 2014
     */
    int updateByPrimaryKey(Users record);
    
    java.util.Map<String, String> getOperationModulePermissionNames(@Param("moduleId")int moduleId, @Param("permissionValue")long permissionValue);
}