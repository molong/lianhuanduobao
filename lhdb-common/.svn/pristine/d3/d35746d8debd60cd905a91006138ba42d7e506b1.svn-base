package com.lhdb.game.entity;

import java.util.ArrayList;
import java.util.List;

public class ModulePermissionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public ModulePermissionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andModuleidIsNull() {
            addCriterion("ModuleID is null");
            return (Criteria) this;
        }

        public Criteria andModuleidIsNotNull() {
            addCriterion("ModuleID is not null");
            return (Criteria) this;
        }

        public Criteria andModuleidEqualTo(Integer value) {
            addCriterion("ModuleID =", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidNotEqualTo(Integer value) {
            addCriterion("ModuleID <>", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidGreaterThan(Integer value) {
            addCriterion("ModuleID >", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ModuleID >=", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidLessThan(Integer value) {
            addCriterion("ModuleID <", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidLessThanOrEqualTo(Integer value) {
            addCriterion("ModuleID <=", value, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidIn(List<Integer> values) {
            addCriterion("ModuleID in", values, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidNotIn(List<Integer> values) {
            addCriterion("ModuleID not in", values, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidBetween(Integer value1, Integer value2) {
            addCriterion("ModuleID between", value1, value2, "moduleid");
            return (Criteria) this;
        }

        public Criteria andModuleidNotBetween(Integer value1, Integer value2) {
            addCriterion("ModuleID not between", value1, value2, "moduleid");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueIsNull() {
            addCriterion("PermissionValue is null");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueIsNotNull() {
            addCriterion("PermissionValue is not null");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueEqualTo(Long value) {
            addCriterion("PermissionValue =", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueNotEqualTo(Long value) {
            addCriterion("PermissionValue <>", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueGreaterThan(Long value) {
            addCriterion("PermissionValue >", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueGreaterThanOrEqualTo(Long value) {
            addCriterion("PermissionValue >=", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueLessThan(Long value) {
            addCriterion("PermissionValue <", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueLessThanOrEqualTo(Long value) {
            addCriterion("PermissionValue <=", value, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueIn(List<Long> values) {
            addCriterion("PermissionValue in", values, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueNotIn(List<Long> values) {
            addCriterion("PermissionValue not in", values, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueBetween(Long value1, Long value2) {
            addCriterion("PermissionValue between", value1, value2, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissionvalueNotBetween(Long value1, Long value2) {
            addCriterion("PermissionValue not between", value1, value2, "permissionvalue");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleIsNull() {
            addCriterion("PermissionTitle is null");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleIsNotNull() {
            addCriterion("PermissionTitle is not null");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleEqualTo(String value) {
            addCriterion("PermissionTitle =", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleNotEqualTo(String value) {
            addCriterion("PermissionTitle <>", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleGreaterThan(String value) {
            addCriterion("PermissionTitle >", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleGreaterThanOrEqualTo(String value) {
            addCriterion("PermissionTitle >=", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleLessThan(String value) {
            addCriterion("PermissionTitle <", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleLessThanOrEqualTo(String value) {
            addCriterion("PermissionTitle <=", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleLike(String value) {
            addCriterion("PermissionTitle like", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleNotLike(String value) {
            addCriterion("PermissionTitle not like", value, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleIn(List<String> values) {
            addCriterion("PermissionTitle in", values, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleNotIn(List<String> values) {
            addCriterion("PermissionTitle not in", values, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleBetween(String value1, String value2) {
            addCriterion("PermissionTitle between", value1, value2, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andPermissiontitleNotBetween(String value1, String value2) {
            addCriterion("PermissionTitle not between", value1, value2, "permissiontitle");
            return (Criteria) this;
        }

        public Criteria andNullityIsNull() {
            addCriterion("Nullity is null");
            return (Criteria) this;
        }

        public Criteria andNullityIsNotNull() {
            addCriterion("Nullity is not null");
            return (Criteria) this;
        }

        public Criteria andNullityEqualTo(Byte value) {
            addCriterion("Nullity =", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityNotEqualTo(Byte value) {
            addCriterion("Nullity <>", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityGreaterThan(Byte value) {
            addCriterion("Nullity >", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityGreaterThanOrEqualTo(Byte value) {
            addCriterion("Nullity >=", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityLessThan(Byte value) {
            addCriterion("Nullity <", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityLessThanOrEqualTo(Byte value) {
            addCriterion("Nullity <=", value, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityIn(List<Byte> values) {
            addCriterion("Nullity in", values, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityNotIn(List<Byte> values) {
            addCriterion("Nullity not in", values, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityBetween(Byte value1, Byte value2) {
            addCriterion("Nullity between", value1, value2, "nullity");
            return (Criteria) this;
        }

        public Criteria andNullityNotBetween(Byte value1, Byte value2) {
            addCriterion("Nullity not between", value1, value2, "nullity");
            return (Criteria) this;
        }

        public Criteria andStateflagIsNull() {
            addCriterion("StateFlag is null");
            return (Criteria) this;
        }

        public Criteria andStateflagIsNotNull() {
            addCriterion("StateFlag is not null");
            return (Criteria) this;
        }

        public Criteria andStateflagEqualTo(Integer value) {
            addCriterion("StateFlag =", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagNotEqualTo(Integer value) {
            addCriterion("StateFlag <>", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagGreaterThan(Integer value) {
            addCriterion("StateFlag >", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("StateFlag >=", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagLessThan(Integer value) {
            addCriterion("StateFlag <", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagLessThanOrEqualTo(Integer value) {
            addCriterion("StateFlag <=", value, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagIn(List<Integer> values) {
            addCriterion("StateFlag in", values, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagNotIn(List<Integer> values) {
            addCriterion("StateFlag not in", values, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagBetween(Integer value1, Integer value2) {
            addCriterion("StateFlag between", value1, value2, "stateflag");
            return (Criteria) this;
        }

        public Criteria andStateflagNotBetween(Integer value1, Integer value2) {
            addCriterion("StateFlag not between", value1, value2, "stateflag");
            return (Criteria) this;
        }

        public Criteria andParentidIsNull() {
            addCriterion("ParentID is null");
            return (Criteria) this;
        }

        public Criteria andParentidIsNotNull() {
            addCriterion("ParentID is not null");
            return (Criteria) this;
        }

        public Criteria andParentidEqualTo(Integer value) {
            addCriterion("ParentID =", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotEqualTo(Integer value) {
            addCriterion("ParentID <>", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThan(Integer value) {
            addCriterion("ParentID >", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidGreaterThanOrEqualTo(Integer value) {
            addCriterion("ParentID >=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThan(Integer value) {
            addCriterion("ParentID <", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidLessThanOrEqualTo(Integer value) {
            addCriterion("ParentID <=", value, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidIn(List<Integer> values) {
            addCriterion("ParentID in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotIn(List<Integer> values) {
            addCriterion("ParentID not in", values, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidBetween(Integer value1, Integer value2) {
            addCriterion("ParentID between", value1, value2, "parentid");
            return (Criteria) this;
        }

        public Criteria andParentidNotBetween(Integer value1, Integer value2) {
            addCriterion("ParentID not between", value1, value2, "parentid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ModulePermission
     *
     * @mbggenerated do_not_delete_during_merge Fri Oct 31 15:08:52 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ModulePermission
     *
     * @mbggenerated Fri Oct 31 15:08:52 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}